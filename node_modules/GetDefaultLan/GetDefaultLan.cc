#include <node.h>
#include <v8.h>
#include <windows.h>
#pragma comment(lib,"Kernel32.lib")
using namespace v8;
void Method(const v8::FunctionCallbackInfo<Value>& args) {
  Isolate* isolate = Isolate::GetCurrent();
  HandleScope scope(isolate);
  char* ptLan = NULL;
  LANGID lid = GetSystemDefaultLangID();
       switch (lid)
       {
        case 0x041C:
         ptLan="sq";//阿尔巴尼亚语
         break;
        case 0x045E:
          ptLan="am";//阿姆哈拉语
          break;
        case 0x083C:
          ptLan="ga"; //爱尔兰语
          break;
        case 0x042D:
          ptLan="eu"; //巴斯克语
          break;
        case 0x0402:
          ptLan="bg";//保加利亚语
          break;
        case 0x0415:
          ptLan="pl";//波兰语
          break;
        case 0x0429:
          ptLan="fa";//波斯语
          break;
        case 0x0406:
          ptLan="da";//丹麦语
          break;
        case 0x0419:
          ptLan="ru";//俄语
          break;
        case 0x0464:
          ptLan="tl";//菲律宾语
          break;
        case 0x0462:
          ptLan="fy";//弗里西语
          break;
        case 0x0437:
          ptLan="ka";//格鲁吉亚语
          break;
        case 0x043F:
          ptLan="kk";//哈萨克语
          break;
        case 0x0412:
          ptLan="ko";//韩语
          break;
        case 0x0413:
        case 0x0813:
          ptLan="nl";//荷兰语
          break;
        case 0x0456:
          ptLan="gl";//加利西亚语
          break;
        case 0x0405:
          ptLan="cs";//捷克语
          break;
        case 0x0483:
          ptLan="co";//科西嘉语
          break;
        case 0x0492:
          ptLan="ku";//库尔德语(windows 无)
          break;
        case 0x0426:
          ptLan="lv";//拉脱维亚语
          break;
        case 0x0427:
          ptLan="lt";//立陶宛语 
          break;
        case 0x0418:
          ptLan="ro";//罗马尼亚语
          break;
        case 0x043A:
          ptLan="mt";//马耳他语
          break;
        case 0x044C:
          ptLan="ml";//马拉雅拉姆语
          break;
        case 0x042F:
          ptLan="mk";//马其顿语
          break;
        case 0x0450:
          ptLan="mn";//蒙古语
          break;
        case 0x0434:
          ptLan="xh";//南非科萨语
          break;
        case 0x0461:
          ptLan="ne";//尼泊尔语
          break;
        case 0x0446:
          ptLan="pa";//旁遮普语
          break;
        case 0x0463:
          ptLan="ps";//普什图语
          break;
        case 0x0411:
          ptLan="ja";//日语
          break;
        case 0x046C:
          ptLan="st";//塞索托语
          break;
        case 0x0424:
          ptLan="sl";//斯洛文尼亚语
          break;
        case 0x044A:
          ptLan="te";//泰卢固语
          break;
        case 0x041E:
          ptLan="th";//泰语
          break;
        case 0x0452:
          ptLan="cy";//威尔士语
          break;
        case 0x0422:
          ptLan="uk";//乌克兰语
          break;
        case 0x2C0A:
        case 0x400A:
        case 0x340A:
        case 0x240A:
        case 0x140A:
        case 0x1C0A:
        case 0x300A:
        case 0x440A:
        case 0x100A:
        case 0x480A:
        case 0x080A:
        case 0x4C0A:
        case 0x180A:
        case 0x3C0A:
        case 0x280A:
        case 0x500A:
        case 0x0C0A:
        case 0x040A://(windows 无)
        case 0x540A://(windows 无)
        case 0x380A:
        case 0x200A:
          ptLan="es";//西班牙语
          break;
        case 0x0408:
          ptLan="el";//希腊语
          break;
        case 0x0859:
          ptLan="sd";//信德语(windows 无)
          break;
        case 0x0470:
          ptLan="ig";//伊博语
          break;
        case 0x042A:
          ptLan="vi";//越南语
          break;
        case 0x1401:
        case 0x3C01:
        case 0x0C01:
        case 0x0801:
        case 0x2C01:
        case 0x3401:
        case 0x3001:
        case 0x1001:
        case 0x1801:
        case 0x2001:
        case 0x4001:
        case 0x0401:
        case 0x2801:
        case 0x1C01:
        case 0x3801:
        case 0x2401:
          ptLan="ar";//阿拉伯语
          break;
        case 0x082C:
        case 0x042C:
          ptLan="az";//阿塞拜疆语
          break;
        case 0x0425:
          ptLan="et";//爱沙尼亚语
          break;
        case 0x0423:
          ptLan="be";//白俄罗斯语
          break;
        case 0x040F:
          ptLan="is";//冰岛语
          break;
        case 0x781A:
          ptLan="bs";//波斯尼亚语
          break;
        case 0x0436:
          ptLan="af";//布尔语(南非荷兰语)
          break;
        case 0x0407:
        case 0x0c07:
        case 0x1407:
        case 0x1007:
        case 0x0807:
          ptLan="de";//德语
          break;
        case 0x040c:
        case 0x080c:
        case 0x0c0c:
        case 0x140c:
        case 0x180c:
        case 0x100c:
          ptLan="fr";//法语
          break;
        case 0x040B:
          ptLan="fi";//芬兰语
          break;
        case 0x0447:
          ptLan="gu";//古吉拉特语
          break;
        case 0x0468:
          ptLan="ha";//豪萨语
          break;
        case 0x0440:
          ptLan="ky";//吉尔吉斯语
          break;
        case 0x0403:
          ptLan="ca";//加泰罗尼亚语
          break;
        case 0x044B:
          ptLan="kn";//卡纳达语
          break;
        case 0x001A: //（windows 无)
        case 0x101A:
        case 0x041A:
          ptLan="hr";//克罗地亚语
          break;
        case 0x0454:
          ptLan="lo";//老挝语
          break;
        case 0x046E:
          ptLan="lb";//卢森堡语
          break;
        case 0x044E:
          ptLan="mr";//马拉地语
          break;
        case 0x083E:
          ptLan="ms";//马来语 
          break;
        case 0x0481:
          ptLan="mi";//毛利语
          break;
        case 0x0435:
          ptLan="zu";//南非祖鲁语 
          break;
        case 0x0414:
        case 0x0814:
          ptLan="no";//挪威语
          break;
        case 0x0416:
        case 0x0816:
          ptLan="pt";//葡萄牙语
          break;
        case 0x081d:
        case 0x041d:
          ptLan="sv";//瑞典语
          break;
        case 0x7C1A:
        case 0x1C1A://(windows 无)
        case 0x181A:
        case 0x0C1A:
        case 0x081A:
          ptLan="sr";//塞尔维亚语
          break;
        case 0x045B:
          ptLan="si";//僧伽罗语
          break;
        case 0x041B:
          ptLan="sk";//斯洛伐克语
          break;
        case 0x0441:
          ptLan="sw";//斯瓦希里语
          break;
        case 0x0428:
          ptLan="tg";//塔吉克语
          break;
        case 0x0449:
          ptLan="ta";//泰米尔语
          break;
        case 0x041F:
          ptLan="tr";//土耳其语
          break;
        case 0x0820:
        case 0x0420:
          ptLan="ur";//乌尔都语
          break;
        case 0x0843:
        case 0x0443:
          ptLan="uz";//乌兹别克语
          break;
        case 0x040d:
          ptLan="iw";//希伯来语 
          break;
        case 0x0475:
          ptLan="haw";//夏威夷语(windows 无)
          break;
        case 0x040E:
          ptLan="hu";//匈牙利语 
          break;
        case 0x042B:
          ptLan="hy";//亚美尼亚语
          break;
        case 0x0410:
        case 0x0810:
          ptLan="it";//意大利语
          break;
        case 0x0439:
          ptLan="hi";//印地语
          break;
        case 0x0421:
          ptLan="id";//印尼语
          break;
        case 0x046A:
          ptLan="yo";//约鲁巴语
          break;
        case 0x0404:
          ptLan="zh-TW";//中文繁体
          break;
        case 0x0C04:
        case 0x1404:
        case 0x1004:
        case 0x0004: //(windows 无)
        case 0x0804:
          ptLan="zh-CN";//中文
          break;
        case 0x0C09:
        case 0x2809:
        case 0x1009:
        case 0x2409:
        case 0x4009:
        case 0x1809:
        case 0x2009:
        case 0x4409:
        case 0x1409:
        case 0x3409:
        case 0x4809:
        case 0x1c09:
        case 0x2C09:
        case 0x0809:
        case 0x0409:
        case 0x3009:
          ptLan="en";//英语
          break;
        default:
          ptLan="en";//英语
          break;
       }
  args.GetReturnValue().Set(String::NewFromUtf8(isolate, ptLan));
  //args.GetReturnValue().Set(Number::New(isolate, lid));
}

void Init(Handle<Object> exports) {
  Isolate* isolate = Isolate::GetCurrent();
  exports->Set(String::NewFromUtf8(isolate, "getDefaultLan"),
      FunctionTemplate::New(isolate, Method)->GetFunction());
}

NODE_MODULE(getDefaultLan, Init)
